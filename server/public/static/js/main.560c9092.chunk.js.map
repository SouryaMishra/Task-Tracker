{"version":3,"sources":["appConstants.js","utils/reducer.js","hooks/index.js","api/index.js","components/Modal.js","components/Header.js","components/Menu.js","components/TaskItem.js","components/TaskCategory.js","components/FilterTasks.js","components/NavMenu.js","App.js","index.js"],"names":["url","statusMap","priorityMap","colorMap","reducer","tasks","action","type","payload","map","task","isSelected","id","ids","includes","find","updatedTask","filter","status","flag","filteredTasks","length","sort","task1","task2","priority","concat","useFetch","useReducer","dispatch","useState","isLoading","setIsLoading","isMounted","useRef","asyncDispatch","useCallback","fetch","then","res","json","current","catch","err","console","log","method","headers","body","JSON","stringify","addedTask","updateTask","Promise","all","updateTasks","updatedTasks","taskId","taskIds","value","useMemo","useEffect","useModal","isModalShown","setIsModalShown","document","classList","add","remove","querySelector","Modal","props","error","setError","useContext","DispatchContext","windowRef","titleRef","priorityRef","title","closeModal","setTimeout","className","onClick","ref","e","stopPropagation","heading","autoComplete","htmlFor","rows","maxLength","onChange","target","trim","foundTask","uuidv4","Header","Menu","buttonRef","menuRef","isCategory","querySelectorAll","forEach","el","toggle","onMouseDown","children","TaskItem","taskItemRef","draggable","onDragStart","dataTransfer","dropEffect","setData","taskItemId","innerHTML","onDragEnd","checked","toggleSelection","href","moveTask","substring","style","background","TaskCategory","isCollapsed","setIsCollapsed","toType","moveSelected","fromType","sortBy","selectedTasksLength","isMatching","onDrop","data","parse","getData","getAttribute","currentTarget","onDragOver","preventDefault","removeTask","handleSave","FilterTasks","inputRef","debouncedSearch","callback","timerId","delay","args","clearTimeout","debounce","setFilters","placeholder","filters","clearFilters","NavMenu","navMenuRef","scrollTo","element","documentElement","top","offsetTop","behavior","createContext","App","queryString","setIsMatching","mediaQuery","window","matchMedia","matches","addEventListener","useMedia","userFilteredTasks","appliedFilters","Object","keys","key","flag1","flag2","flag3","toLowerCase","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.560c9092.chunk.js","sourcesContent":["export const url = \"http://localhost:5000/api/tasks\";\r\n\r\nexport const statusMap = {\r\n  \"todo\" : 0,\r\n  \"in-progress\" : 1,\r\n  \"completed\" : 2\r\n}\r\n\r\nexport const priorityMap = {\r\n  \"Highest\" : 5,\r\n  \"High\": 4,\r\n  \"Medium\": 3,\r\n  \"Lowest\": 2,\r\n  \"Low\": 1\r\n}\r\n\r\nexport const colorMap = {\r\n  \"Highest\":\"#f40505\",\r\n  \"High\":\"#ff920b\",\r\n  \"Medium\":\"#aaaaaa\", \r\n  \"Low\" : \"#52c41a\",\r\n  \"Lowest\" : \"#1890ff\"\r\n}","import {statusMap, priorityMap} from \"../appConstants\";\r\nconst reducer = (tasks, action) => {\r\n    switch(action.type){\r\n        case \"FETCH_ALL_TASKS\":\r\n        return action.payload.map(task => ({...task, isSelected : false}));\r\n        case \"ADD_TASK\":\r\n        return [...tasks, {...action.payload}];\r\n        case \"UPDATE_TASK\":\r\n        return tasks.map(task => task.id === action.payload.id ? action.payload : task);\r\n        case \"UPDATE_TASKS\":\r\n        const ids = action.payload.map(task => task.id);\r\n        return tasks.map(task => {\r\n            if(ids.includes(task.id))   \r\n                return action.payload.find(updatedTask => updatedTask.id === task.id);\r\n            return task;\r\n        });\r\n        case \"REMOVE_TASK\":\r\n        return tasks.filter(task => task.id !== action.payload);\r\n        case \"REMOVE_TASKS\":\r\n        return tasks.filter(task => !action.payload.includes(task.id));\r\n        case \"TOGGLE_SELECTION\":\r\n        return tasks.map(task => task.id === action.payload ? {...task, isSelected: !task.isSelected} : {...task});\r\n        case \"CLEAR_SELECTION\":\r\n        return tasks.map(task => task.status === statusMap[action.payload] && task.isSelected ? {...task, isSelected: !task.isSelected} : {...task});\r\n        case \"SORT_BY\":\r\n        const {flag, status} = action.payload;\r\n        const filteredTasks = tasks.filter(task => task.status === statusMap[status]);\r\n        if(filteredTasks.length > 0) {\r\n            filteredTasks.sort((task1,task2) => flag === \"asc\" ? priorityMap[task1.priority] - priorityMap[task2.priority] : priorityMap[task2.priority] - priorityMap[task1.priority]);\r\n            return tasks.filter(task => task.status !== statusMap[status]).concat(filteredTasks);\r\n        }\r\n        return tasks;      \r\n        default:\r\n        return tasks;  \r\n    }\r\n}\r\n\r\nexport default reducer;","import {useState, useEffect, useReducer, useCallback, useMemo, useRef} from \"react\";\r\nimport reducer from \"../utils/reducer\";\r\nimport {fetchAllTasks, addTask, updateTask, updateTasks, removeTask, removeTasks} from \"../api\";\r\n\r\nexport function useFetch() {\r\n    const [tasks, dispatch] = useReducer(reducer, []);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const isMounted = useRef(false);\r\n\r\n      const asyncDispatch = useCallback((action) => {\r\n        switch(action.type) {\r\n          case \"FETCH_ALL_TASKS_ASYNC\":\r\n          fetchAllTasks()\r\n          .then(tasks => {\r\n            if(isMounted.current) {\r\n            setIsLoading(false);\r\n            dispatch({type : \"FETCH_ALL_TASKS\", payload: tasks});\r\n            }\r\n          })\r\n          .catch(err => {\r\n            setIsLoading(false);\r\n            console.log(err);\r\n          });\r\n          break;\r\n    \r\n          case \"ADD_TASK_ASYNC\":\r\n          addTask(action.payload).then( addedTask => {\r\n            if(isMounted.current) dispatch({type : \"ADD_TASK\", payload: addedTask})  \r\n          })\r\n          .catch(err => console.log(err));\r\n          break;\r\n    \r\n          case \"UPDATE_TASK_ASYNC\":\r\n            updateTask(action.payload).then( updatedTask => {\r\n              if(isMounted.current) dispatch({type : \"UPDATE_TASK\", payload: updatedTask})  \r\n          })\r\n          .catch(err => console.log(err));\r\n          break;\r\n    \r\n          case \"UPDATE_TASKS_ASYNC\":\r\n            updateTasks(action.payload).then( updatedTasks => {\r\n              if(isMounted.current) dispatch({type : \"UPDATE_TASKS\", payload: updatedTasks})  \r\n            })\r\n            .catch(err => console.log(err));\r\n          break;\r\n    \r\n          case \"REMOVE_TASK_ASYNC\":\r\n            removeTask(action.payload).then( () => {\r\n              if(isMounted.current) dispatch({type : \"REMOVE_TASK\", payload: action.payload})  \r\n            })\r\n            .catch(err => console.log(err));\r\n          break;\r\n    \r\n          case \"REMOVE_TASKS_ASYNC\":\r\n            removeTasks(action.payload).then( () => {\r\n              if(isMounted.current) dispatch({type : \"REMOVE_TASKS\", payload: action.payload})  \r\n            })\r\n            .catch(err => console.log(err));\r\n          break;\r\n    \r\n          default: \r\n          return;\r\n        }\r\n      },[])\r\n    \r\n      const value = useMemo(() => {\r\n        return {\r\n          tasks,\r\n          dispatch,\r\n          asyncDispatch  //memoized with useCallback\r\n        }\r\n      }, [tasks, dispatch, asyncDispatch])\r\n\r\n      useEffect(() => {\r\n        isMounted.current = true;\r\n        return () => isMounted.current = false;\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        console.log(\"Loading...\")\r\n        setIsLoading(true);\r\n        asyncDispatch({type: \"FETCH_ALL_TASKS_ASYNC\"});\r\n      }, [asyncDispatch]);\r\n    \r\n\r\n    return {tasks, dispatch, isLoading, value}; //return object instead of an array, because order matters in array destructuring\r\n\r\n}\r\n\r\n\r\nexport function useModal() {\r\n    const [isModalShown, setIsModalShown] = useState(false);\r\n      \r\n    useEffect(() => {\r\n      if(isModalShown) document.body.classList.add(\"modal-shown\")\r\n      else {\r\n        document.body.classList.remove(\"modal-shown\");\r\n        document.querySelector(\".nav-menu\")?.classList.remove(\"visible\");\r\n      }\r\n    },[isModalShown])\r\n    \r\n    return [isModalShown, setIsModalShown];\r\n}\r\n\r\nexport function useMedia(queryString = \"(max-width : 768px)\") {\r\n  const [isMatching, setIsMatching] = useState(false);\r\n      \r\n  useEffect(() => {\r\n    let mediaQuery = window.matchMedia(queryString);\r\n    setIsMatching(mediaQuery.matches); // to match initially when screen width is less than 768px and not changing\r\n    const handleScreenWidthChange = e => {\r\n      setIsMatching(e.matches);\r\n    }\r\n    mediaQuery.addEventListener('change', handleScreenWidthChange); // when screen width is changing\r\n  },[setIsMatching, queryString])\r\n  \r\n  return isMatching;\r\n\r\n}","import {url} from \"../appConstants\";\r\n\r\nexport const fetchAllTasks = () => {\r\n  return fetch(url).then(res => res.json());\r\n}\r\n\r\nexport const addTask = (task) => {\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(task)\r\n      })\r\n      .then(res => res.json())\r\n}\r\n\r\nexport const updateTask = (task) => {\r\n    return fetch(`${url}/${task.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(task)\r\n      })\r\n      .then(res => res.json())\r\n\r\n}\r\n\r\nexport const updateTasks = (tasks) => {\r\n  return Promise.all(tasks.map(task =>fetch(`${url}/${task.id}`, {method: \"PUT\", headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body: JSON.stringify(task)\r\n}\r\n  )\r\n  .then(res => res.json())\r\n  ))\r\n}\r\n\r\nexport const removeTask = (taskId) => {\r\n  return fetch(`${url}/${taskId}`, {\r\n    method: \"DELETE\",\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const removeTasks = (taskIds) => {\r\n  return Promise.all(taskIds.map(taskId =>fetch(`${url}/${taskId}`, {method: \"DELETE\",}).then(res =>res.json())))\r\n                 \r\n\r\n}","import {useEffect, useState, useContext, useRef} from \"react\";\r\nimport {DispatchContext} from \"../App\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport \"../css/modal.css\";\r\n\r\nfunction Modal(props){\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const {tasks, asyncDispatch} = useContext(DispatchContext);\r\n    const windowRef = useRef(null);\r\n    const titleRef = useRef(\"\");\r\n    const priorityRef = useRef(\"\");\r\n\r\n    useEffect(() => {\r\n        windowRef.current?.classList.add(\"visible\");\r\n        titleRef.current.value = props.title;\r\n        priorityRef.current.value = props.priority;\r\n    },[props.title, props.priority])\r\n\r\n    const handleSave = () => {\r\n            const title = titleRef.current.value;\r\n            const priority = priorityRef.current.value; \r\n            \r\n            if(title.trim() === \"\"){\r\n                setError(\"Please enter a task description\");\r\n                return;\r\n            }\r\n           closeModal();\r\n           if(!props.taskId)\r\n                asyncDispatch({type: \"ADD_TASK_ASYNC\", payload: {id: uuidv4(), title, status: 0, priority, isSelected: false}});\r\n           else{\r\n                const foundTask = tasks.find(task => task.id === props.taskId);\r\n                if(foundTask)\r\n                    asyncDispatch({type: \"UPDATE_TASK_ASYNC\", payload: {id: props.taskId, title, priority, status: foundTask.status, isSelected: foundTask.isSelected}});\r\n           }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        windowRef.current?.classList.remove(\"visible\");\r\n        setTimeout(props.closeModal, 250);\r\n    }\r\n\r\n    return (\r\n        <div className = \"modal\" onClick = {closeModal}>\r\n            <div ref = {windowRef} className = \"modal-window\" onClick = {e => e.stopPropagation()}>\r\n            <div className = \"modal-header\">\r\n                <h1>{props.heading}</h1>\r\n                <button className = \"btn-close\" onClick = {closeModal}>\r\n                <i className=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n            <div className = \"divider\"/>\r\n            <div className = \"modal-content\">\r\n                {error && <p className = \"error-text\">{error}</p>}\r\n                <form className = \"form-edit\" autoComplete = \"off\">\r\n                    <div className = \"form-control\">\r\n                    <label htmlFor = \"title\">Description</label>\r\n                    <textarea ref = {titleRef} id = \"title\" rows = {4} maxLength = {250} onChange = {e => {\r\n                        if(e.target.value.trim() === \"\") setError(\"Please enter a task description\");\r\n                        else setError(\"\")\r\n                    }}/>\r\n                    </div>\r\n                    <div className = \"form-control\">\r\n                    <label htmlFor = \"priority\">Priority</label>\r\n                    <select ref = {priorityRef} id = \"priority\" className = \"select-priority\">\r\n                        <option value = \"Highest\">Highest</option>\r\n                        <option value = \"High\">High</option>\r\n                        <option value = \"Medium\">Medium</option>\r\n                        <option value = \"Low\">Low</option>\r\n                        <option value = \"Lowest\">Lowest</option>\r\n                    </select>\r\n                   </div>\r\n                </form>\r\n            </div>\r\n            <div className = \"modal-footer\">\r\n                <div className = \"form-actions\">\r\n                        <button className = \"btn\" onClick = {handleSave}>Save Changes</button>\r\n                        <button className = \"btn btn-cancel\" onClick = {closeModal} >Cancel</button>\r\n                </div>   \r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import {useModal} from \"../hooks\";\r\nimport Modal from \"./Modal\";\r\n\r\nfunction Header() {\r\n \r\n  const [isModalShown, setIsModalShown] = useModal();\r\n\r\n  return (\r\n    <header className = \"header\">\r\n      <div className = \"content\">\r\n      <h1 className = \"app-title\">Task Tracker</h1>\r\n      {isModalShown && <Modal title = \"\" priority = \"Medium\" closeModal = {() => setIsModalShown(false)} heading = \"Add task\"/>}\r\n<button className = \"btn btn-add-task\" onClick = {() => setIsModalShown(true)}><i className=\"fas fa-plus\"></i> &nbsp; Add Task</button>\r\n</div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"../css/menu.css\";\r\nimport {useRef} from \"react\";\r\n\r\nfunction Menu(props){\r\n    const buttonRef = useRef(null);\r\n    const menuRef = useRef(null);\r\n\r\n    const handleDivClick = e => {\r\n      document.querySelectorAll(\".show-menu\").forEach(el =>{\r\n        if (el !== menuRef.current) el.classList.remove(\"show-menu\");\r\n        })\r\n        document.querySelectorAll(\".btn-options\").forEach(el =>{\r\n         if (el !== buttonRef.current) el.classList.remove(\"active\")\r\n        })\r\n        \r\n        menuRef.current?.classList.toggle(\"show-menu\");\r\n        buttonRef.current?.classList.toggle(\"active\");\r\n    } \r\n\r\n   const handleDivMouseDown = e => {\r\n     e.stopPropagation(); //stop propagating event to document mousedown handler\r\n   }\r\n    \r\n    return(\r\n      \r\n        <div className = {`${props.isCategory ? \"category \" : \"\"}menu`} onClick = {handleDivClick} onMouseDown = {handleDivMouseDown}>\r\n        <button ref = {buttonRef} className = {`${props.isCategory ? \"category \" : \"\"}btn-options`}>\r\n          <i className=\"fas fa-ellipsis-v\"></i>\r\n        </button>\r\n        \r\n        <ul ref = {menuRef} className = {`${props.isCategory ? \"category \" : \"\"}menu-list`}>\r\n            {props.children}\r\n        </ul>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Menu;","import {useContext, useRef} from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport Modal from \"./Modal\";\r\nimport \"../css/task-item.css\";\r\nimport {colorMap} from \"../appConstants\";\r\nimport { DispatchContext } from \"../App\";\r\nimport {useModal} from \"../hooks\";\r\n\r\nfunction TaskItem(props){\r\n  const [isModalShown, setIsModalShown] = useModal();\r\n  const {id, title, priority, status, isSelected} = props;\r\n  const {dispatch, asyncDispatch} = useContext(DispatchContext);\r\n  const taskItemRef = useRef(null);\r\n\r\n  const handleDragStart = (e) =>{\r\n    e.dataTransfer.dropEffect = \"move\";\r\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify({taskItemId : e.target.id, innerHTML : e.target.innerHTML}));\r\n    e.target.classList.add(\"dragging\");\r\n  } \r\n\r\n  const handleDragEnd = e => {\r\n    e.target.classList.remove(\"dragging\");\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalShown(true)\r\n  }\r\n\r\n  const removeTask = taskId => {\r\n    asyncDispatch({type: \"REMOVE_TASK_ASYNC\", payload: taskId })\r\n  }\r\n\r\n  const toggleSelection = id => {\r\n    dispatch({type: \"TOGGLE_SELECTION\", payload: id});\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {isModalShown && <Modal taskId = {id} title = {title} priority = {priority} closeModal = {() => setIsModalShown(false)} heading = \"Edit task\"/>}\r\n    <div ref = {taskItemRef} id = {`id-${id}`} data-type = \"task-item\" className = \"task-item\" draggable = {\"true\"} onDragStart = {handleDragStart} onDragEnd = {handleDragEnd}>\r\n      <div className = \"task-item-header\">\r\n        <input id = {`checkbox-${id}`} className = \"task-item-checkbox\" type = \"checkbox\" checked = {isSelected} onChange = {e => toggleSelection(id)}/>\r\n        <label htmlFor = {`checkbox-${id}`}/>\r\n        <div className = \"task-actions\">\r\n          <Menu id = {id} isCategory = {false}>\r\n            <li><a href = \"#!\" onClick = {showModal}>Edit</a></li>\r\n            <li><a href = \"#!\" onClick = {() => removeTask(id)}>Remove</a></li>\r\n           { status === 0 ? (\r\n              <>\r\n                <li><a href = \"#!\" onClick = {() => props.moveTask(id, \"in-progress\")}>Move to In Progress</a></li>\r\n                <li><a href = \"#!\" onClick = {() => props.moveTask(id, \"completed\")}>Move to Completed</a></li>\r\n              </>\r\n            ) :  ( status === 1 ? (\r\n              <>\r\n                <li><a href = \"#!\" onClick = {() => props.moveTask(id, \"todo\")}>Move to To do</a></li>\r\n                <li><a href = \"#!\" onClick = {() => props.moveTask(id, \"completed\")}>Move to Completed</a></li>\r\n              </>\r\n            ) : \r\n            (\r\n              <>\r\n                <li><a href = \"#!\" onClick = {() => props.moveTask(id, \"in-progress\")}>Move to In Progress</a></li>\r\n                <li><a href = \"#!\" onClick = {() => props.moveTask(id, \"todo\")}>Move to To do</a></li>\r\n              </>\r\n            ))}\r\n          </Menu>     \r\n        </div>\r\n      </div>\r\n      <div className = \"task-item-body\">\r\n      <h1 className = \"task-title\">{title.length > 120 ? title.substring(0,120) + \"...\" : title}</h1>\r\n      </div>\r\n      \r\n      <div className = \"task-item-footer\">\r\n        <div className = \"priority-container\" >\r\n          <div className = \"indicator\" style = {{background: colorMap[priority]}}/>\r\n          <p>{priority}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskItem;\r\n","import Menu from \"./Menu\";\r\nimport {useContext} from \"react\";\r\nimport {DispatchContext} from \"../App\";\r\nimport {statusMap} from \"../appConstants\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport {useState} from \"react\";\r\nimport \"../css/task-category.css\";\r\n\r\nfunction TaskCategory(props) {\r\n\r\n    const {tasks, dispatch, asyncDispatch} = useContext(DispatchContext);\r\n    const [isCollapsed, setIsCollapsed] = useState(false);\r\n\r\n    const handleDrop = (e) =>{\r\n        const data = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\r\n        if(e.target.getAttribute(\"data-drop\") === \"drop\"){  // if dropped on a valid drop target\r\n            moveTask(data.taskItemId.substring(3, data.taskItemId.length), e.currentTarget.id);\r\n        }\r\n      } \r\n\r\n      const moveTask = (taskId, toType) => {\r\n        const foundTask = tasks.find(task => task.id === taskId);\r\n        if(foundTask) {\r\n          foundTask.status = statusMap[toType];\r\n          asyncDispatch({type: \"UPDATE_TASK_ASYNC\", payload: foundTask});\r\n        }\r\n      }\r\n    \r\n      const handleDragOver = (e) =>{\r\n       e.preventDefault(); //must prevent default handling to allow drop\r\n       e.dataTransfer.dropEffect = \r\n       e.target.getAttribute(\"data-drop\") === \"drop\" ? \"move\" : \"none\"; // to show move effect only on valid drop targets\r\n       //specified by data-drop custom attribute\r\n      } \r\n\r\n      const clearSelection = (type) => {\r\n        dispatch({type: \"CLEAR_SELECTION\", payload: type})\r\n      }\r\n\r\n      const removeSelected = (type) => {\r\n        asyncDispatch({type: \"REMOVE_TASKS_ASYNC\", \r\n        payload: props.tasks.filter(task => (task.status === statusMap[type] && task.isSelected)).map(task => task.id)});\r\n      }\r\n\r\n      const moveSelected = (fromType, toType) => {\r\n        asyncDispatch({type: \"UPDATE_TASKS_ASYNC\", \r\n        payload: props.tasks.filter(task => task.status === statusMap[fromType] && task.isSelected).map(task => {\r\n          task.status = statusMap[toType];\r\n          return task;\r\n        })\r\n      })\r\n    }\r\n\r\n      const sortBy = (status, flag) => {\r\n        dispatch({type: \"SORT_BY\", payload: {status, flag}});\r\n      }\r\n\r\n      const toggleCollapse = (e) => {\r\n        setIsCollapsed(e => !e);\r\n      }\r\n\r\n      const selectedTasksLength = props.tasks.filter(task => task.isSelected).length\r\n\r\n   return(\r\n    <div id = {props.id} data-drop = \"drop\" className = {`task-category${isCollapsed && props.isMatching ? \" collapsed\" : \"\"}`} onDrop = {handleDrop} onDragOver = {handleDragOver}>\r\n        <div className = \"task-category-header\">\r\n          <h1>{props.id === \"todo\" ? \"To do\" : (props.id === \"in-progress\" ? \"In Progress\" : \"Completed\")}</h1>\r\n          <p className = \"count\">{props.tasks.length}</p>\r\n          \r\n          {props.tasks.length === 0 || (props.isMatching && isCollapsed) || (<Menu id = {props.id} isCategory = {true}>\r\n            <li className = \"list-heading\"><span>Sort by priority</span></li>\r\n            <div className = \"divider\"/>\r\n            <li><a href = \"#!\" onClick = {() => sortBy(props.id,\"desc\")}>High to Low</a></li>\r\n            <li><a href = \"#!\" onClick = {() => sortBy(props.id,\"asc\")}>Low to High</a></li>\r\n            {selectedTasksLength > 0 && (\r\n            <>\r\n            <div className = \"divider\"/>\r\n            <li className = \"list-heading\"><span>{selectedTasksLength} {selectedTasksLength === 1 ? \"task\" : \"tasks\"} selected</span></li>\r\n            <div className = \"divider\"/>\r\n            <li><a href = \"#!\" onClick = {() => clearSelection(props.id)}>Clear Selection</a></li>\r\n            <li><a href = \"#!\" onClick = {() => removeSelected(props.id)}>Remove Selected</a></li>\r\n            <li><a href = \"#!\" onClick = {() => moveSelected(props.id, \"in-progress\")}>Move Selected to In Progress</a></li>\r\n            <li><a href = \"#!\" onClick = {() => moveSelected(props.id, \"completed\")}>Move Selected to Completed</a></li>\r\n            </>)}\r\n   </Menu>) }\r\n          {props.isMatching && <button className = \"btn-toggle\" onClick = {toggleCollapse}>\r\n            <i className =\"fas fa-chevron-down\"/>\r\n          </button>}\r\n        </div>\r\n        <div className = \"task-category-body\" data-drop = \"drop\">\r\n        {props.tasks.map(task => <TaskItem key = {task.id} {...task} toggleSelection = {props.toggleSelection} moveTask = {moveTask} removeTask = {props.removeTask} handleSave = {props.handleSave}/>)}\r\n        </div>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default TaskCategory;","import \"../css/filter-tasks.css\";\r\nimport {useMemo, useRef} from \"react\";\r\n\r\nfunction debounce(callback, delay = 800){\r\n    let timerId;\r\n    return function(...args){\r\n        if(timerId) clearTimeout(timerId);\r\n        timerId = setTimeout(() =>  {               \r\n            callback(...args);\r\n            timerId = null;\r\n        }, delay)     \r\n    }\r\n}\r\n\r\nfunction FilterTasks(props){\r\n\r\n    const inputRef = useRef(null); //input is uncontrolled, so use useRef hook to reset its value\r\n    //Making input controlled does not work for debouncing, as onchange and setstate should happen synchronously\r\n    //We have debounced the onchange handler, so now it is asynchronous \r\n\r\n    const debouncedSearch = useMemo( () => debounce((e) => {\r\n        props.setFilters(\"title\", e.target.value)\r\n    }, 800),[])\r\n\r\n    return(\r\n        <div className = \"filter-container\">\r\n            <form className = \"filter-form\" autoComplete=\"off\">\r\n        <div>\r\n        <input ref = {inputRef} id = \"search\" className = \"search-task-input\" type = \"search\" placeholder = \"Search Task\" onChange = {debouncedSearch}/>\r\n        </div>\r\n        <div className = \"inline-controls\">\r\n        <label htmlFor = \"status\">Status</label>\r\n        <select id = \"status\" className = \"select\" value = {props.filters.status} onChange = {e => {\r\n            props.setFilters(\"status\", e.target.value);\r\n        }}>\r\n            <option value = \"\">All</option>\r\n            <option value = \"todo\">To do</option>\r\n            <option value = \"in-progress\">In Progress</option>\r\n            <option value = \"completed\">Completed</option>\r\n        </select>\r\n\r\n        <label htmlFor = \"priority\">Priority</label>\r\n        <select id = \"priority\" className = \"select\"  onChange = {e => {\r\n            props.setFilters(\"priority\", e.target.value)\r\n        }}>\r\n            <option value = \"\">All</option>\r\n            <option value = \"highest\">Highest</option>\r\n            <option value = \"high\">High</option>\r\n            <option value = \"medium\">Medium</option>\r\n            <option value = \"low\">Low</option>\r\n            <option value = \"lowest\">Lowest</option>\r\n        </select>\r\n        <button className = \"btn\" onClick = {(e) => {\r\n            e.preventDefault(); //If there is a button inside form element, it acts as submit, \r\n            //therefore prevent default behaviour to avoid page refresh\r\n            inputRef.current.value = \"\"; //Reset value of uncontrolled element\r\n            props.clearFilters();\r\n        }} >Clear Filters</button>\r\n        </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterTasks;","import { useRef, useEffect} from \"react\";\r\nimport \"../css/nav-menu.css\";\r\n\r\nfunction NavMenu(props) {\r\n    \r\n    const navMenuRef = useRef(null);\r\n\r\n    useEffect(() => navMenuRef.current?.classList.add(\"visible\"), [])\r\n\r\n    const scrollTo = (e, status) => {\r\n        closeModal();\r\n        var element = document.querySelector(`#${status}`);\r\n        if(element) \r\n            document.documentElement.scrollTo({top : element.offsetTop - 216, behavior : \"smooth\"});    \r\n      }\r\n    \r\n      const closeModal = () => {\r\n        navMenuRef.current?.classList.remove(\"visible\")\r\n        setTimeout(props.closeModal, 200);\r\n      }\r\n\r\n   return(<div className = \"nav-menu-container\" onClick = {closeModal}>\r\n    <ul ref = {navMenuRef} className = \"nav-menu\" onClick = {(e) => e.stopPropagation()}>\r\n      <li><p>Scroll to top of a category</p> <button className = \"btn-close\" onClick = {closeModal}>\r\n            <i className=\"fas fa-times\"></i>\r\n            </button></li>\r\n      <div className = \"divider\"/>\r\n      <li><a href = \"#!\" onClick = {(e) => scrollTo(e, \"todo\")}>To do</a></li>\r\n      <li><a href = \"#!\" onClick = {(e) => scrollTo(e, \"in-progress\")}>In Progress</a></li>\r\n      <li><a href = \"#!\" onClick = {(e) => scrollTo(e, \"completed\")}>Completed</a></li>\r\n    </ul>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default NavMenu;","import {useState, createContext, useMemo} from \"react\";\nimport Header from \"./components/Header\";\nimport TaskCategory from \"./components/TaskCategory\";\nimport FilterTasks from \"./components/FilterTasks\";\nimport NavMenu from \"./components/NavMenu\";\nimport {useFetch, useModal, useMedia} from \"./hooks\"; \nimport {statusMap} from \"./appConstants\";\nimport './App.css';\n\nexport const DispatchContext = createContext(null);\n\nfunction App() {\n\n  const [filters, setFilters] = useState({\n    title: \"\",\n    status: \"\",\n    priority:\"\"\n  });\n\n  \n  const {tasks, isLoading, value} = useFetch();\n  const isMatching = useMedia();\n  const [isModalShown, setIsModalShown] = useModal();\n  \n  const clearFilters = () => {\n    setFilters({\n      title : \"\", status : \"\", priority : \"\"\n    })\n  }\n\n  const userFilteredTasks = useMemo(() => {\n    const appliedFilters = Object.keys(filters).filter(key => filters[key] !== \"\");\n    if(appliedFilters.length === 0) return tasks;\n    return tasks.filter(task => {\n      let flag1 = true, flag2 = true, flag3 = true;\n      if(appliedFilters.includes(\"title\"))\n      flag1 = task.title.toLowerCase().includes(filters.title.trim().toLowerCase()) \n      if(appliedFilters.includes(\"status\"))\n      flag2 = task.status === statusMap[filters.status]\n      if(appliedFilters.includes(\"priority\"))\n      flag3 = task.priority.toLowerCase() === filters.priority.toLowerCase();\n      return flag1 && flag2 && flag3;\n    });\n  }, [filters, tasks]);\n\n  return (\n    <div className=\"App\">\n        \n        <DispatchContext.Provider value = {value}>\n          <Header/>\n          <FilterTasks filters = {filters} clearFilters = {clearFilters} \n          setFilters = {(key, value) => {\n            console.log(\"parent callback called\", key, value);\n            setFilters({...filters, [key] : value})\n          }}\n          />\n          {isMatching && <button className = \"navbar\" onClick = {() => setIsModalShown(true)}>\n              <i className =\"fas fa-chevron-up\"/>\n              <i className =\"fas fa-chevron-down\"/>\n          </button>}\n          {isLoading ? <div className = \"loading\"><i className=\"fas fa-circle-notch\"></i></div> : \n          \n          <div className = \"tasks-container\">\n          <div className = \"tasks-grid-container\">            \n            <TaskCategory id = \"todo\" tasks = {userFilteredTasks.filter(task => task.status === 0)} isMatching = {isMatching}/>\n            <TaskCategory id = \"in-progress\" tasks = {userFilteredTasks.filter(task => task.status === 1)} isMatching = {isMatching}/>\n            <TaskCategory id = \"completed\" tasks = {userFilteredTasks.filter(task => task.status === 2)} isMatching = {isMatching}/>\n          \n            </div>\n  </div> }\n          \n        </DispatchContext.Provider>\n        {isModalShown && <NavMenu closeModal = {() => setIsModalShown(false)}/>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\ndocument.addEventListener(\"mousedown\", function(e){\n  document.querySelectorAll(\".show-menu\").forEach(el => el.classList.remove(\"show-menu\"));\n  document.querySelectorAll(\".btn-options\").forEach(el => el.classList.remove(\"active\"));\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}